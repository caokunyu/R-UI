{"version":3,"sources":["../static/js/0.545c5e19.chunk.js","containers/Home/index.js","../node_modules/marked/lib/marked.js","webpack:///./src/styles/home/index.css?3d57","styles/home/index.css","docs/cn/Home.js"],"names":["webpackJsonp","128","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_marked__","__WEBPACK_IMPORTED_MODULE_1_marked___default","__WEBPACK_IMPORTED_MODULE_2__styles_home_index_css__","__WEBPACK_IMPORTED_MODULE_3__docs_cn_Home__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","Home","_React$PureComponent","this","getPrototypeOf","apply","arguments","a","createElement","className","dangerouslySetInnerHTML","__html","PureComponent","130","exports","global","Lexer","options","tokens","links","marked","defaults","rules","block","normal","gfm","tables","InlineLexer","inline","renderer","Renderer","Error","breaks","pedantic","TextRenderer","Parser","token","escape","html","encode","replace","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","regex","opt","source","name","val","RegExp","resolveUrl","base","href","baseUrls","test","slice","noop","merge","obj","hasOwnProperty","src","callback","toString","pending","highlight","lex","e","done","err","out","parse","type","text","lang","code","escaped","message","silent","newline","fences","hr","heading","nptable","blockquote","list","def","table","lheading","paragraph","_label","_title","bullet","item","_tag","top","next","loose","cap","bull","b","space","tag","l","exec","push","depth","header","split","align","cells","ordered","match","indexOf","smartLists","join","sanitize","pre","sanitizer","title","charCodeAt","autolink","url","link","reflink","nolink","strong","em","br","del","_scheme","_email","_inside","_href","_backpedal","output","mangle","inLink","outputLink","codespan","trim","smartypants","image","ch","Math","random","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","baseUrl","originIndependentUrl","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","setOptions","parser","lexer","inlineLexer","window","131","hmr","transform","locals","132","version","sources","names","mappings","file","sourcesContent","sourceRoot","133"],"mappings":"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","file":"static/js/0.545c5e19.chunk.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 128:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_marked__ = __webpack_require__(130);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_marked___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_marked__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__styles_home_index_css__ = __webpack_require__(131);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__styles_home_index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__styles_home_index_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__docs_cn_Home__ = __webpack_require__(133);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Home=function(_React$PureComponent){_inherits(Home,_React$PureComponent);function Home(){_classCallCheck(this,Home);return _possibleConstructorReturn(this,(Home.__proto__||Object.getPrototypeOf(Home)).apply(this,arguments));}_createClass(Home,[{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'r-ui-home markdown-body',dangerouslySetInnerHTML:{__html:__WEBPACK_IMPORTED_MODULE_1_marked___default()(__WEBPACK_IMPORTED_MODULE_3__docs_cn_Home__[\"a\" /* default */])}});}}]);return Home;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.PureComponent);/* harmony default export */ __webpack_exports__[\"default\"] = (Home);\n\n/***/ }),\n\n/***/ 130:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\n]+)+)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))/;\nblock.def = replace(block.def)\n  ('label', block._label)\n  ('title', block._title)\n  ();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"\\/>]*)*?\\/?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('tag', '<' + block._tag)\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('paragraph', block.paragraph)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , tag\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1,cap[3].length-1);\n      tag = cap[1].toLowerCase();\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?[a-zA-Z0-9\\-]+(?:\"[^\"]*\"|'[^']*'|\\s[^<'\">\\/]*)*?\\/?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^_([^\\s_](?:[^_]|__)+?[^\\s_])_\\b|^\\*((?:\\*\\*|[^*])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n\ninline.autolink = replace(inline.autolink)\n  ('scheme', inline._scheme)\n  ('email', inline._email)\n  ()\n\ninline._inside = /(?:\\[[^\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: replace(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    ('email', inline._email)\n    (),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(src.links, merge({}, this.options, {renderer: new TextRenderer}));\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n\t// explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src == 'undefined' || src === null)\n    throw new Error('marked(): input parameter is undefined or null');\n  if (typeof src != 'string')\n    throw new Error('marked(): input parameter is of type ' +\n      Object.prototype.toString.call(src) + ', string expected');\n\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false,\n  baseUrl: null\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (true) {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ }),\n\n/***/ 131:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(132);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(127)(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n/***/ }),\n\n/***/ 132:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(126)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".r-ui-home{margin:36px;border:1px solid #e1e4e8;padding:32px;border-radius:3px}\", \"\", {\"version\":3,\"sources\":[\"/Users/bjqxdn0702/R-UI/src/styles/home/index.css\"],\"names\":[],\"mappings\":\"AAAA,WACE,YAAa,AACb,yBAA0B,AAC1B,aAAc,AACd,iBAAmB,CACpB\",\"file\":\"index.css\",\"sourcesContent\":[\".r-ui-home {\\n  margin: 36px;\\n  border: 1px solid #e1e4e8;\\n  padding: 32px;\\n  border-radius: 3px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 133:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (\"\\n# \\u6982\\u8981\\n\\n## R-UI \\u7684\\u76EE\\u6807\\n\\u8FD9\\u4E2A\\u9879\\u76EE\\u4E3B\\u8981\\u662F\\u7528\\u4E8E\\u6211\\u4E2A\\u4EBA\\u5BF9\\u4E8E\\u8FC7\\u53BB\\u4E24\\u5E74\\u5E74\\u505A\\u7684\\u51E0\\u4E2A\\u9879\\u76EE\\u7684 React \\u76F8\\u5173\\u6280\\u672F\\u603B\\u7ED3\\uFF0C\\u5E76\\u4E14\\uFF0C\\u901A\\u8FC7\\u6574\\u4E2A\\u5E93\\u7684\\u5F00\\u53D1\\u8FC7\\u7A0B\\u4EE5\\u53CA\\u8FD9\\u4E2A\\u7F51\\u7AD9\\u7684\\u5185\\u5BB9\\u90FD\\u662F\\u4ECE\\u6D45\\u5165\\u6DF1\\u7684\\u6559\\u6750\\u5F0F\\u7684\\u3002\\u901A\\u8FC7\\u8FD9\\u4E2A UI \\u5E93\\uFF0C\\u4E86\\u89E3 R-UI \\u7684\\u5F00\\u53D1\\u8FC7\\u7A0B\\uFF0C\\u4ECE\\u800C\\u5B66\\u4F1A\\u5982\\u4F55\\u4F7F\\u7528 React\\uFF0C\\u5982\\u4F55\\u521B\\u5EFA React \\u7EC4\\u4EF6\\u3002\\u5E76\\u907F\\u5F00\\u5728 React \\u5F00\\u53D1\\u8FC7\\u7A0B\\u4E2D\\u6240\\u9700\\u8981\\u9762\\u4E34\\u7684\\u5404\\u79CD\\u95EE\\u9898\\u3002\\n\\n## \\u4E3A\\u4EC0\\u4E48\\u662F React\\uFF1F\\n\\u524D\\u7AEF\\u6846\\u67B6\\u76EE\\u524D\\u662F Angular\\uFF0CReact(+Redux)\\uFF0CVue(+Vuex) \\u4E09\\u5206\\u5929\\u4E0B\\u3002\\u4ED6\\u4EEC\\u90FD\\u662F\\u975E\\u5E38\\u51FA\\u8272\\u7684\\u524D\\u7AEF\\u6846\\u67B6\\uFF0C\\u90FD\\u53EF\\u4EE5\\u7528\\u4E8E\\u89E3\\u51B3\\u76EE\\u524D\\u524D\\u7AEF\\u6280\\u672F\\u4E0A\\u7EDD\\u5927\\u591A\\u6570\\u95EE\\u9898\\uFF0C\\u5176\\u5B9E\\u4E0D\\u5FC5\\u7EA0\\u7ED3\\u54EA\\u4E2A\\u597D\\uFF0C\\u54EA\\u4E2A\\u6846\\u67B6\\u80FD\\u7ED9\\u4F60\\u5E26\\u6765\\u7684\\u5F00\\u53D1\\u4F53\\u9A8C\\u6700\\u597D\\uFF0C\\u5C31\\u7528\\u54EA\\u4E2A\\u3002\\u4E09\\u4E2A\\u6846\\u67B6\\u6211\\u90FD\\u7528\\u8FC7\\uFF0C\\u4F46\\u662F\\u6700\\u7EC8\\u8FD8\\u662F\\u6700\\u559C\\u6B22 React\\u3002\\u6211\\u53EA\\u5217\\u51FA\\u6211\\u559C\\u6B22 React \\u7684\\u7406\\u7531\\uFF1A\\n\\n- \\u4E0D\\u518D\\u9700\\u8981\\u6211\\u4EEC\\u53BB\\u5173\\u5FC3\\u90A3\\u8BE5\\u6B7B\\u7684 Dom \\u64CD\\u4F5C\\uFF0C\\u8FD9\\u57FA\\u672C\\u4E0A\\u662F\\u9009\\u62E9\\u4E09\\u5927\\u6846\\u67B6\\u7684\\u4E3B\\u8981\\u539F\\u56E0\\n- \\u5B98\\u65B9\\u63D0\\u4F9B\\u811A\\u624B\\u67B6\\u7528\\u4E8E\\u652F\\u6301 React \\u9879\\u76EE\\u7684\\u521D\\u671F\\u521B\\u5EFA (create-react-app)\\uFF0C\\u96C6\\u6210\\u975E\\u5E38\\u4E30\\u5BCC\\u7684\\u5F00\\u53D1\\u5DE5\\u5177\\uFF0C\\u5F00\\u53D1\\u4F53\\u9A8C\\u53EF\\u4EE5\\u8BF4\\u662F\\u4E09\\u5927\\u6846\\u67B6\\u4E2D\\u6700\\u597D\\u7684\\uFF0C\\u53EF\\u4EE5\\u5728 Chrome \\u4E2D\\u76F4\\u63A5\\u8C03\\u8BD5 React \\u6E90\\u7801(\\u5728\\u8FD9\\u65B9\\uFF0CVue\\u7684\\u5F00\\u53D1\\u4F53\\u9A8C\\u662F\\u6700\\u5DEE\\u7684\\uFF0C\\u65E0\\u6CD5\\u5728\\u6D4F\\u89C8\\u5668\\u4E2D\\u76F4\\u63A5\\u8C03\\u8BD5\\u4EE3\\u7801\\u3002\\u53EF\\u89C1\\u793E\\u533A\\u89C4\\u6A21\\u7684\\u5927\\u5C0F\\u6709\\u591A\\u91CD\\u8981\\u3002)\\n- \\u53EA\\u8981\\u4F1A JS(ES6/ES7) \\u5373\\u53EF\\u4F7F\\u7528\\uFF0CJSX \\u7684\\u5C31\\u548C\\u666E\\u901A\\u6A21\\u7248\\u6280\\u672F\\u5DEE\\u4E0D\\u591A\\u3002\\u53EF\\u4EE5\\u8BF4 React \\u6CA1\\u6709\\u4EC0\\u4E48\\u989D\\u5916\\u5B66\\u4E60\\u6210\\u672C\\n- \\u8D34\\u8FD1\\u4F20\\u7EDF Client-side \\u5F00\\u53D1\\u4F53\\u9A8C\\uFF0C\\u6211\\u6BD4\\u8F83\\u559C\\u6B22\\u8FD9\\u79CD\\u5F00\\u53D1\\u65B9\\u5F0F\\n- React \\u7684\\u5F00\\u53D1\\u6587\\u6863\\u603B\\u662F\\u5728\\u6559\\u5927\\u5BB6\\u5982\\u4F55\\u5199\\u51FA\\u66F4\\u5408\\u7406\\uFF0C\\u66F4\\u6613\\u4E8E\\u7EF4\\u62A4\\u7684\\u4EE3\\u7801 (best practice)\\u3002\\u5E76\\u4E14\\u544A\\u8BC9\\u4F60\\u4EC0\\u4E48\\u662F\\u4E0D\\u597D\\u7684\\u4EE3\\u7801 (bad practice)\\n- FB\\u8FD9\\u79CD\\u5927\\u516C\\u53F8\\u8D1F\\u8D23\\u5F00\\u53D1\\u548C\\u7EF4\\u62A4\\uFF0C\\u5E76\\u4E14\\u6709\\u6700\\u5E9E\\u5927\\u7684\\u524D\\u7AEF\\u793E\\u533A\\u652F\\u6301\\u3002\\u65E0\\u9700\\u62C5\\u5FC3\\u540E\\u7EED\\u95EE\\u9898\\n- \\u5347\\u7EA7\\u53CB\\u597D\\u3002\\u7248\\u672C\\u5347\\u7EA7\\u51E0\\u4E4E\\u4E0D\\u4F1A\\u5E26\\u6765\\u4EFB\\u4F55\\u95EE\\u9898\\n- \\u9700\\u8981\\u638C\\u63E1\\u7684 Api \\u975E\\u5E38\\u5C11\\u3002\\u4E0A\\u624B\\u5FEB\\n- \\u6027\\u80FD\\u51FA\\u8272\\uFF0C\\u867D\\u7136\\u6709\\u6027\\u80FD\\u66F4\\u597D\\u7684\\u6846\\u67B6\\u6BD4\\u5982 Vue\\uFF0C\\u4F46\\u662F\\uFF0C\\u5728\\u8FC7\\u53BB\\u7684\\u5DE5\\u4F5C\\u7ECF\\u9A8C\\u544A\\u8BC9\\u6211\\uFF0C\\u771F\\u6B63\\u5F71\\u54CD\\u6027\\u80FD\\u7684\\u5730\\u65B9\\u5F80\\u5F80\\u662F\\u5B9E\\u73B0\\u4E1A\\u52A1\\u7684\\u903B\\u8F91\\u3002\\u6846\\u67B6\\u5E26\\u6765\\u7684\\u6027\\u80FD\\u5F71\\u54CD\\uFF0C\\u5927\\u591A\\u6570\\u60C5\\u51B5\\u4E0B\\u5FAE\\u4E4E\\u5176\\u5FAE (\\u9664\\u4E86 Angularjs)\\n- \\u867D\\u7136 Github \\u4E2D Star \\u6570\\u91CF\\u548C Vue \\u5DEE\\u8DDD\\u8D8A\\u6765\\u8D8A\\u5C0F\\uFF0C\\u4F46\\u662F\\u4ECE Npmjs \\u7684\\u4E0B\\u8F7D\\u7EDF\\u8BA1\\u4E2D\\u3002React \\u7684\\u65E5\\u5747\\u4E0B\\u8F7D\\u6570\\u91CF\\u662F Angular/Vue \\u76846\\uFF0C7\\u500D\\u3002\\u53EF\\u89C1\\u5168\\u4E16\\u754C\\u8303\\u56F4 React \\u7684\\u7528\\u6237\\u662F\\u9065\\u9065\\u9886\\u5148\\u7684\\n\\n\\u5976\\u4E86\\u4E00\\u6CE2 React \\u7684\\u597D\\u5904\\uFF0C\\u4F46\\u662F\\u76EE\\u524D React \\u7684\\u95EE\\u9898\\u4E5F\\u662F\\u975E\\u5E38\\u591A\\uFF1A\\n\\n- \\u6587\\u6863\\u5E76\\u4E0D\\u662F\\u5F00\\u53D1\\u6307\\u5BFC\\uFF0C\\u4E14\\u96BE\\u4E8E\\u7406\\u89E3\\u3002\\u867D\\u7136 React16 \\u51FA\\u6765\\u6587\\u6863\\u6539\\u7248\\u4EE5\\u540E\\u6BD4\\u4E4B\\u524D\\u597D\\u4E86\\u8BB8\\u591A\\u3002\\u4F46\\u662F\\u8FD9\\u771F\\u7684\\u4E0D\\u662F\\u4E00\\u4E2A \\\"\\u7528\\u6237\\u4F7F\\u7528\\u8BF4\\u660E\\u4E66\\\"\\uFF0C\\u800C\\u50CF\\u662F\\u524D\\u7AEF\\u54F2\\u5B66 Blog\\n- React \\u7684\\u8BBE\\u8BA1\\u592A\\u6FC0\\u8FDB\\u4E86\\u3002\\u98A0\\u8986\\u4E86\\u4F20\\u7EDF\\u524D\\u7AEF\\u5F00\\u53D1\\u7684\\u5F88\\u591A\\u6A21\\u5F0F\\uFF0C\\u5176\\u4E2D\\u9700\\u8981\\u7406\\u89E3\\u5927\\u91CF\\u7684\\u8BBE\\u8BA1\\u6A21\\u5F0F\\n- \\u5728\\u5927\\u578B\\uFF0C\\u590D\\u6742\\u524D\\u7AEF\\u9879\\u76EE\\u4E2D\\uFF0C\\u9700\\u8981\\u7406\\u89E3\\u590D\\u6742\\u7684 Flux \\u67B6\\u6784\\n- \\u4E00\\u7FA4\\u4E71\\u4E03\\u516B\\u7CDF\\u7684\\u72B6\\u6001(state, props)\\u4F1A\\u4EE4\\u4EBA\\u82E6\\u607C\\n- \\u5F88\\u591A\\u4EBA\\u4E0D\\u592A\\u4E60\\u60EF JSX\\uFF0C\\u4F46\\u662F\\u6211\\u771F\\u7684\\u641E\\u4E0D\\u61C2\\u4ED6\\u548C\\u4ED6\\u4EEC\\u559C\\u6B22\\u7684 Vue \\u6216\\u8005 Angular \\u6A21\\u7248\\u6709\\u4EC0\\u4E48\\u533A\\u522B\\n- React \\u7684\\u601D\\u60F3\\u592A\\u6FC0\\u8FDB\\u4E86\\uFF0C\\u9700\\u8981\\u5177\\u5907\\u4E00\\u5B9A\\u7684\\u4E1A\\u52A1\\u62BD\\u8C61\\u80FD\\u529B(\\u72B6\\u6001)\\uFF0C\\u5426\\u5219\\u4F1A\\u975E\\u5E38\\u82E6\\u607C\\u3002\\u4F46\\u662F\\u5BF9\\u4E8E\\u56FD\\u5185\\u7684\\u5927\\u591A\\u6570\\u524D\\u7AEF\\u6280\\u672F\\u4EBA\\u5458\\u662F\\u6CA1\\u6709\\u8FD9\\u65B9\\u9762\\u7ECF\\u9A8C\\u7684\\n- React \\u4E0D\\u662F\\u6E10\\u8FDB\\u5F0F\\u7684\\uFF0C\\u76F8\\u6BD4\\u8F83\\u4E8E Vue \\u80FD\\u591F\\u8F7B\\u677E\\u7684\\u5E94\\u7528\\u4E8E\\u8001\\u65E7\\u9879\\u76EE\\u4E0D\\u540C\\uFF0CReact \\u867D\\u7136\\u4E5F\\u53EF\\u4EE5\\u7528\\u4E8E\\u8001\\u65E7\\u9879\\u76EE\\uFF0C\\u4F46\\u662F\\u4E2A\\u4EBA\\u8BA4\\u4E3A\\u5F00\\u53D1\\u4F53\\u9A8C\\u975E\\u5E38\\u7684\\u4E0D\\u53CB\\u597D\\n- \\u540E\\u7AEF\\u6E32\\u67D3\\u76F8\\u6BD4\\u4F20\\u7EDF\\u5F00\\u53D1\\u6709\\u4E00\\u5B9A\\u4E0A\\u624B\\u96BE\\u5EA6\\uFF0C\\u867D\\u7136\\u5B98\\u65B9\\u4E00\\u76F4\\u5F3A\\u8C03\\uFF0C\\u8FD9\\u662F\\u503C\\u5F97\\u7684\\uFF0C\\u56E0\\u4E3A\\u4F60\\u4F1A\\u5728\\u5C06\\u6765\\u83B7\\u5229\\u66F4\\u591A\\u3002\\u4F46\\u662F\\u4EE5\\u56FD\\u5185\\u4E92\\u8054\\u7F51\\u5F00\\u53D1\\u73B0\\u72B6\\u3002\\u6CA1\\u4EBA\\u539F\\u610F\\u82B1\\u8D39\\u90A3\\u4E2A\\u6210\\u672C\\u53BB\\u7814\\u7A76\\uFF0C\\u8FD9\\u4E5F\\u662F Angular \\u5728\\u4E2D\\u56FD\\u4E92\\u8054\\u7F51\\u9879\\u76EE\\u4E2D\\u4F7F\\u7528\\u5F88\\u5C11\\u7684\\u539F\\u56E0\\u5427\\n- \\u540E\\u7AEF\\u6E32\\u67D3\\u6027\\u80FD\\u4F9D\\u7136\\u5B58\\u5728\\u95EE\\u9898\\uFF0C\\u67E5\\u9605\\u8FC7\\u8BB8\\u591A\\u6587\\u7AE0\\u3002\\u5728 React \\u4ECE\\u7EC4\\u4EF6\\u6E32\\u67D3\\u6210\\u9875\\u9762\\u6027\\u80FD\\u4E00\\u76F4\\u4E0D\\u662F\\u5F88\\u597D\\u3002\\u6240\\u4EE5\\u76EE\\u524D\\u4E00\\u822C\\u4EC5\\u7528\\u4E8E\\u540C\\u6784\\u76F4\\u51FA\\n\\n_**Note**_: _*\\u5176\\u5B9E\\u771F\\u7684\\u4E0D\\u5FC5\\u7EA0\\u7ED3\\u90A3\\u4E48\\u591A\\u524D\\u7AEF\\u6846\\u67B6\\u54EA\\u4E2A\\u597D\\uFF0C\\u54EA\\u4E2A\\u4E0D\\u597D\\u3002\\u4ED6\\u4EEC\\u90FD\\u80FD\\u89E3\\u51B3\\u524D\\u7AEF\\u95EE\\u9898\\uFF0C\\u5E2E\\u52A9\\u6211\\u4EEC\\u5FEB\\u901F\\u843D\\u5730\\u9700\\u6C42\\u3002\\u552F\\u4E00\\u7684\\u4E0D\\u540C\\u662F\\u4E0D\\u540C\\u7684\\u5F00\\u53D1\\u4F53\\u9A8C\\uFF0C\\u559C\\u6B22\\u54EA\\u79CD\\u5F00\\u53D1\\u4F53\\u9A8C\\uFF0C\\u5C31\\u53BB\\u5B66\\u4E60\\u597D\\u4E86*_\\n\\n## \\u672C\\u7AD9\\u7684\\u4E3B\\u8981\\u5185\\u5BB9\\n\\n- \\u8BA4\\u8BC6 React\\n- \\u4ECE create-react-app \\u5F00\\u59CB\\n- React \\u7684\\u57FA\\u672C\\u8BED\\u6CD5\\n- Thinking in React(\\u91CD\\u8981)\\n- Flux(\\u91CD\\u8981)\\n\\n## \\u597D\\u4E86\\u8BF4\\u8FD9\\u4E48\\u591A\\u5E9F\\u8BDD\\uFF0C\\u90A3\\u8BA9\\u6211\\u4EEC\\u5F00\\u59CB\\u5427\\uFF01\\n[\\u8FDB\\u5165-\\u6982\\u8981](/main)\\n\");\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.545c5e19.chunk.js","import React from 'react';\nimport marked from 'marked';\n\nimport './../../styles/home/index.css';\nimport Document from './../../docs/cn/Home';\n\nexport default class Home extends React.PureComponent {\n  render() {\n    return <div className=\"r-ui-home markdown-body\"\n      dangerouslySetInnerHTML={{__html: marked(Document)}}>\n    </div>\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Home/index.js","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\n]+)+)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))/;\nblock.def = replace(block.def)\n  ('label', block._label)\n  ('title', block._title)\n  ();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"\\/>]*)*?\\/?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('tag', '<' + block._tag)\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('paragraph', block.paragraph)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , tag\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1,cap[3].length-1);\n      tag = cap[1].toLowerCase();\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?[a-zA-Z0-9\\-]+(?:\"[^\"]*\"|'[^']*'|\\s[^<'\">\\/]*)*?\\/?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^_([^\\s_](?:[^_]|__)+?[^\\s_])_\\b|^\\*((?:\\*\\*|[^*])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n\ninline.autolink = replace(inline.autolink)\n  ('scheme', inline._scheme)\n  ('email', inline._email)\n  ()\n\ninline._inside = /(?:\\[[^\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: replace(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    ('email', inline._email)\n    (),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(src.links, merge({}, this.options, {renderer: new TextRenderer}));\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n\t// explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src == 'undefined' || src === null)\n    throw new Error('marked(): input parameter is undefined or null');\n  if (typeof src != 'string')\n    throw new Error('marked(): input parameter is of type ' +\n      Object.prototype.toString.call(src) + ', string expected');\n\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false,\n  baseUrl: null\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/marked/lib/marked.js\n// module id = 130\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../node_modules/postcss-loader/lib/index.js??postcss!./index.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/home/index.css\n// module id = 131\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".r-ui-home{margin:36px;border:1px solid #e1e4e8;padding:32px;border-radius:3px}\", \"\", {\"version\":3,\"sources\":[\"/Users/bjqxdn0702/R-UI/src/styles/home/index.css\"],\"names\":[],\"mappings\":\"AAAA,WACE,YAAa,AACb,yBAA0B,AAC1B,aAAc,AACd,iBAAmB,CACpB\",\"file\":\"index.css\",\"sourcesContent\":[\".r-ui-home {\\n  margin: 36px;\\n  border: 1px solid #e1e4e8;\\n  padding: 32px;\\n  border-radius: 3px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"importLoaders\":1,\"minimize\":true,\"sourceMap\":true}!./node_modules/postcss-loader/lib?{\"ident\":\"postcss\",\"plugins\":[null,null]}!./src/styles/home/index.css\n// module id = 132\n// module chunks = 0","export default `\n# 概要\n\n## R-UI 的目标\n这个项目主要是用于我个人对于过去两年年做的几个项目的 React 相关技术总结，并且，通过整个库的开发过程以及这个网站的内容都是从浅入深的教材式的。通过这个 UI 库，了解 R-UI 的开发过程，从而学会如何使用 React，如何创建 React 组件。并避开在 React 开发过程中所需要面临的各种问题。\n\n## 为什么是 React？\n前端框架目前是 Angular，React(+Redux)，Vue(+Vuex) 三分天下。他们都是非常出色的前端框架，都可以用于解决目前前端技术上绝大多数问题，其实不必纠结哪个好，哪个框架能给你带来的开发体验最好，就用哪个。三个框架我都用过，但是最终还是最喜欢 React。我只列出我喜欢 React 的理由：\n\n- 不再需要我们去关心那该死的 Dom 操作，这基本上是选择三大框架的主要原因\n- 官方提供脚手架用于支持 React 项目的初期创建 (create-react-app)，集成非常丰富的开发工具，开发体验可以说是三大框架中最好的，可以在 Chrome 中直接调试 React 源码(在这方，Vue的开发体验是最差的，无法在浏览器中直接调试代码。可见社区规模的大小有多重要。)\n- 只要会 JS(ES6/ES7) 即可使用，JSX 的就和普通模版技术差不多。可以说 React 没有什么额外学习成本\n- 贴近传统 Client-side 开发体验，我比较喜欢这种开发方式\n- React 的开发文档总是在教大家如何写出更合理，更易于维护的代码 (best practice)。并且告诉你什么是不好的代码 (bad practice)\n- FB这种大公司负责开发和维护，并且有最庞大的前端社区支持。无需担心后续问题\n- 升级友好。版本升级几乎不会带来任何问题\n- 需要掌握的 Api 非常少。上手快\n- 性能出色，虽然有性能更好的框架比如 Vue，但是，在过去的工作经验告诉我，真正影响性能的地方往往是实现业务的逻辑。框架带来的性能影响，大多数情况下微乎其微 (除了 Angularjs)\n- 虽然 Github 中 Star 数量和 Vue 差距越来越小，但是从 Npmjs 的下载统计中。React 的日均下载数量是 Angular/Vue 的6，7倍。可见全世界范围 React 的用户是遥遥领先的\n\n奶了一波 React 的好处，但是目前 React 的问题也是非常多：\n\n- 文档并不是开发指导，且难于理解。虽然 React16 出来文档改版以后比之前好了许多。但是这真的不是一个 \"用户使用说明书\"，而像是前端哲学 Blog\n- React 的设计太激进了。颠覆了传统前端开发的很多模式，其中需要理解大量的设计模式\n- 在大型，复杂前端项目中，需要理解复杂的 Flux 架构\n- 一群乱七八糟的状态(state, props)会令人苦恼\n- 很多人不太习惯 JSX，但是我真的搞不懂他和他们喜欢的 Vue 或者 Angular 模版有什么区别\n- React 的思想太激进了，需要具备一定的业务抽象能力(状态)，否则会非常苦恼。但是对于国内的大多数前端技术人员是没有这方面经验的\n- React 不是渐进式的，相比较于 Vue 能够轻松的应用于老旧项目不同，React 虽然也可以用于老旧项目，但是个人认为开发体验非常的不友好\n- 后端渲染相比传统开发有一定上手难度，虽然官方一直强调，这是值得的，因为你会在将来获利更多。但是以国内互联网开发现状。没人原意花费那个成本去研究，这也是 Angular 在中国互联网项目中使用很少的原因吧\n- 后端渲染性能依然存在问题，查阅过许多文章。在 React 从组件渲染成页面性能一直不是很好。所以目前一般仅用于同构直出\n\n_**Note**_: _*其实真的不必纠结那么多前端框架哪个好，哪个不好。他们都能解决前端问题，帮助我们快速落地需求。唯一的不同是不同的开发体验，喜欢哪种开发体验，就去学习好了*_\n\n## 本站的主要内容\n\n- 认识 React\n- 从 create-react-app 开始\n- React 的基本语法\n- Thinking in React(重要)\n- Flux(重要)\n\n## 好了说这么多废话，那让我们开始吧！\n[进入-概要](/main)\n`\n\n\n// WEBPACK FOOTER //\n// ./src/docs/cn/Home.js"],"sourceRoot":""}